"============================ my plugins start =============================
set nocompatible " be iMproved, required
filetype off " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

"alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')
call vundle#begin()

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.

" Git plugin not hosted on GitHub
"Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
"Plugin 'ascenator/L9', {'name': 'newL9'}
" All of your Plugins must be added before the following line

Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'L9'
Plugin 'scrooloose/nerdtree'
Plugin 'vim-scripts/OmniCppComplete'
Plugin 'vim-scripts/AutoComplPop'
Plugin 'taglist.vim'
Plugin 'winmanager'
"Plugin 'ack.vim'
"Plugin 'minibufexpl.vim'

call vundle#end() " required
filetype plugin indent on " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList - lists configured plugins
" :PluginInstall - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"=============== for vim =====================
"set list lcs=tab:\¦\ " 显示对齐线 | ¦ ┆ │
"hi cursorline cterm=none term=none
"autocmd WinEnter * setlocal cursorline
"autocmd WinLeave * setlocal nocursorline
"highlight CursorLine guibg=#30F010 ctermbg=189
syntax enable " 开启语法高亮
syntax on
set background=dark
set t_Co=256 " 开启256色显示
set scrolloff=3 " 滚动时保持边距5行
set number " 开启行号显示
set cmdheight=1
set nocompatible
set confirm " 在处理未保存或只读文件的时候，弹出确认
set autoindent    " 自动缩进
set tabstop=4    " Tab键的宽度
set expandtab " 展开tab为空格
set softtabstop=4    " 统一缩进为4
set shiftwidth=4
set hlsearch " 高亮搜索
set laststatus=2 " 始终显示状态栏
set encoding=utf-8 " 
set ignorecase " 搜索忽略大小写
set nopaste " 切换到正常模式
set cursorline
set mouse=n

"========== for quick key =============
nmap <F10> :set paste<cr> " 切换到粘贴模式
nmap <F11> :set nopaste<cr>
nmap <silent>nh :nohlsearch<cr> 
nmap <silent>nm :set nonumber<cr>
nmap <silent>mn :set number<cr>
nmap <silent>cc :cclose<cr>
nmap <silent>qq :qa<cr>
nmap <silent>ww :w<cr>
"let mapleader=","
"nmap <silent> <leader>nm :set nonumber<cr>
"nmap <silent> <leader>mn :set number<cr>

"========== for NERDTree ==============
map nt :NERDTreeToggle<cr>
let g:NERDTree_title="[NERDTree]"
let NERDChristmasTree=1
let NERDTreeAutoCenter=1
"let NERDTreeWinPos="left"
let NERDTreeShowBookmarks=0
let NERDTreeMouseMode=1
"let NERDTreeWinSize=25
let NERDTreeShowHidden=1
let g:NERDTreeDirArrowExpandable = '+'
let g:NERDTreeDirArrowCollapsible = '-'
"autocmd vimenter * NERDTree
"wincmd w
"autocmd VimEnter * wincmd w
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
"autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
function! NERDTree_Start()  
    exec 'NERDTree'  
endfunction        
function! NERDTree_IsValid()  
    return 1  
endfunction  

"=========== omnicppcomplete ===============
set completeopt=menu,menuone
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_NamespaceSearch = 2
let OmniCpp_DisplayMode = 1
let OmniCpp_ShowScopeInAbbr = 1
let OmniCpp_ShowPrototypeInAbbr = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_MayCompleteDot = 1
let OmniCpp_MayCompleteArrow = 1
let OmniCpp_MayCompleteScope = 1
let OmniCpp_DefaultNamespace=["std"]
let OmniCpp_SelectFirstItem = 2

"============== AutoComplPop ===============
highlight Pmenu ctermfg=0 ctermbg=13 guibg=Magenta
highlight PmenuSel ctermfg=0 ctermbg=10 guibg=Yellow
highlight PmenuSbar ctermbg=248 guibg=Grey
highlight PmenuThumb ctermbg=15 guibg=White

"============== TagList ====================
"let Tlist_Auto_Open=1
"let Tlist_Use_Right_Window=1
map tl :TlistToggle<cr>
let Tlist_Ctags_Cmd='/usr/local/bin/ctags'
let Tlist_Exit_OnlyWindow=1
let Tlist_WinWidth=25
let Tlist_Show_One_File=1
let Tlist_Auto_Update=1

"============= minibufexpl ================
"let g:miniBufExplMapWindowNavVim = 1   
"let g:miniBufExplMapWindowNavArrows = 1   
"let g:miniBufExplMapCTabSwitchBufs = 1   
"let g:miniBufExplModSelTarget = 1  
"let g:miniBufExplMoreThanOne=0

"============= winmanager =================
let g:winManagerWindowLayout='NERDTree|TagList'
map wm :WMToggle<cr>
"let g:winManagerWindowLayout='FileExplorer|TagList'
let g:defaultExplorer = 0 
let g:winManagerWidth = 25
let g:bufExplorerMaxHeight=15
let g:miniBufExplorerMoreThanOne=0

"============== Ctags =====================
"map <F5> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
set tags=tags;
set tags+=./tags;
map <F5> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR><CR> :TlistUpdate<CR>
imap <F5> <ESC>:!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR><CR> :TlistUpdate<CR>
nmap <C-]> g]

"============== Ack ======================= 
map <F4> :Ack<Space>

"============== vim mergetool =============
map <silent> m1 :diffget 1<CR> :diffupdate<CR>
map <silent> m2 :diffget 2<CR> :diffupdate<CR>
map <silent> m3 :diffget 3<CR> :diffupdate<CR>
map <silent> m4 :diffget 4<CR> :diffupdate<CR>

